dir.create(data_dir)
fileURL = "http://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileURL, raw_data_zip, method="curl")
dir.create(data_dir)
unzip(raw_data_zip, exdir=data_dir, junkpaths=T)
sprintf("%s/%s", data_dir, "subject_test.txt")
train_data_Subject = read.table(sprintf("%s/%s", data_dir, "subject_test.txt"))
test_data_Subject  = read.table(sprintf("%s/%s", data_dir, "subject_train.txt"))
View(test_data_Subject)
View(train_data_Subject)
?rbind
data_Subject       = rbind(train_data_Subject, test_data_Subject)
View(data_Subject)
View(test_data_Subject)
View(train_data_Subject)
View(test_data_Subject)
View(test_data_Subject)
View(train_data_Subject)
names(data_Subject)
names(data_Subject)= "subject"
names(data_Subject)
train_data_Y = read.table(sprintf("%s/%s", data_dir, "y_train.txt"))
test_data_Y  = read.table(sprintf("%s/%s", data_dir, "y_test.txt"))
data_Y       = rbind(train_data_Y, test_data_Y)
class(train_data_Y)
?read.table
train_data_X = read.table(sprintf("%s/%s", data_dir, "X_train.txt"))
test_data_X  = read.table(sprintf("%s/%s", data_dir, "X_test.txt"))
data_X       = rbind(train_data_X, test_data_X)
view(train_data_X)
View(train_data_X)
View(test_data_X)
View(test_data_X)
table(test_data_Y)
table(test_data_X)
View(test_data_Subject)
train_data_Subject = read.table(sprintf("%s/%s", data_dir, "subject_train.txt"))
test_data_Subject  = read.table(sprintf("%s/%s", data_dir, "subject_test.txt"))
data_Subject       = rbind(train_data_Subject, test_data_Subject)
names(data_Subject)= "subject"
View(test_data_Subject)
activities      = read.table(sprintf("%s/%s", data_dir, "activity_labels.txt"))
View(activities)
activities[, 2] = tolower(gsub("_", "", as.character(activities[, 2])))
View(activities)
View(data_Y)
View(data_Y)
x = c(1,2,3)
x
x = c(a,b,c)
x = c("a","b","c")
x
y = c(3,2,1,2,2,1,1,3)
y
x(y)
x[y]
activities      = read.table(sprintf("%s/%s", data_dir, "activity_labels.txt"))
activities[, 2] = tolower(gsub("_", "", as.character(activities[, 2])))
data_Y [,1]     = activities[ data_Y[,1], 2]
names(data_Y)   = "activity"
View(data_Y)
features          = read.table(sprintf("%s/%s", data_dir, "features.txt"))
View(features)
View(features)
features_MSD      = grep("-mean\\(\\)|-std\\(\\)", features[, 2])
features_MSD
data_X_MSD        = data_X[,features_MSD]
features[features_MSD, 2]
gsub("\\(|\\)", "",  features[features_MSD, 2])
tolower(gsub("\\(|\\)", "",  features[features_MSD, 2]))
names(data_X_MSD) = tolower(gsub("\\(|\\)", "",  features[features_MSD, 2]))
tidy_dataset = cbind(data_Subject, data_Y, data_X_MSD)
View(tidy_dataset)
View(tidy_dataset)
write.table (tidy_dataset,
sep=",",
"merged_tidy_data.csv")
?melt
data_M  = melt ( tidy_dataset,
id=c("subject","activity")
)
View(data_M)
View(data_M)
?dcast
tidy_avg_data = dcast(data_M,
formula = subject + activity ~ variable,
mean)
View(tidy_avg_data)
View(tidy_avg_data)
30*6
library(kernlab)
data(spam)
install.packages("kernlab")
library(kernlab)
data(spam)
View(spam)
str(spam[, 1:5])
?sd
100*100
100*100*100
pi
pi^2
t<-seq(0,100,length.out=1000);
x<-3; gamma <- exp(-t) * t^(x-1)
x<-3; gamma <- function(t) exp(-t) * t^(x-1)
gamma(1)
gamma(2)
plot(t,gamma(t))
x<-3; pregamma <- function(t) exp(-t) * t^(x-1)
plot(t,pregamma(t))
gamma <- function(x,t) sum(pregamma(t))
plot(t,gamma(2,t))
pregamma <- function(t,x) exp(-t) * t^(x-1)
gamma <- function(x,t) sum(pregamma(x,t))
plot(t,gamma(2,t))
gamma <- function(x,t) sum(pregamma(t,x))
plot(t,gamma(2,t))
?qt
?sd
?var
1/12
1/12/sqrt(1000)
1/sqrt(12000)
?dpois
lambda <- 5/1;
ppois(10, lamda)
ppois(10, lambda)
ppois(10/3, lambda)
ppois(10, 15)
install.packages("xtable")
library("xtable", lib.loc="/home/leibrandt/R/x86_64-pc-linux-gnu-library/3.1")
setwd("~/Coursera/Reproducable Research/ProgrammingAssignment1")
acitivity <- read.csv("activity.csv")
View(acitivity)
acitivity <- read.csv("activity.csv")
View(acitivity)
setwd("~/Coursera/Reproducable Research/ProgrammingAssignment1/RepData_PeerAssessment1")
acitivity <- read.csv("activity.csv")
l = list.files("activity.csv")
acitivity2 <- read.csv(l[1])
l = list.files("activity.zip")
acitivity2 <- read.csv(l[1])
setwd("~/Coursera/Reproducable Research/ProgrammingAssignment1/RepData_PeerAssessment1")
l = list.files("activity.zip")
?unzip
unzip("activity.zip", junkpaths = T )
unzip("activity.zip", junkpaths = F )
l = list.files("activity.zip")
unzip("activity.zip", junkpaths = F )
unzip("activity.zip")
l = list.files("activity.zip")
l = unzip("activity.zip", list = TRUE)
View(l)
View(l)
View(l)
unzip("activity.zip", list = TRUE)$Name
acitivity2 <- read.csv(unzip("activity.zip", list = TRUE)$Name)
View(acitivity2)
unzip("activity.zip")
acitivity <- read.csv(unzip("activity.zip", list = TRUE)$Name)
View(acitivity)
View(acitivity)
?str.POSIXt
class(activity)
View(acitivity)
act
View(acitivity)
class(activity$date)
unzip("activity.zip")
activity <- read.csv(unzip("activity.zip", list = TRUE)$Name)
class(activity$date)
activity$date <- strptime(activity$date)
activity$date <- as.POSIXlt(activity$date)
View(acitivity)
class(activity$date)
unzip("activity.zip")
activity <- read.csv(unzip("activity.zip", list = TRUE)$Name)
activity$date <- strcmp(as.char(activity$date))
activity$date <- strtime(as.char(activity$date))
activity$date <- strptime(as.char(activity$date))
activity$date <- strptime(as.character(activity$date))
as.character(activity$date)
strptime(as.character(activity$date))
activity$date <- as.POSIXlt(activity$date)
View(acitivity)
View(acitivity)
?
?aggregate
aggregate
unzip("activity.zip")
activity <- read.csv(unzip("activity.zip", list = TRUE)$Name)
aggregate(activity, by=list(date=date), FUN=sum)
aggregate(activity, by=list(date=activity$date), FUN=sum)
activity$steps <- as.numeric(activity$steps)
activity$interval <- as.numeric(activity$interval)
aggregate(activity, by=list(date=activity$date), FUN=sum)
unzip("activity.zip")
activity <- read.csv(unzip("activity.zip", list = TRUE)$Name)
activity$steps <- as.numeric(activity$steps)
# activity$date <- as.POSIXlt(activity$date)
activity$interval <- as.numeric(activity$interval)
aggregate(activity, by=list(date=activity$date), FUN=sum)
View(activity)
class(activity)
class(activity$date)
class(activity$steps)
class(activity$interval)
aggregate(activity, by=list(date=date), FUN=sum)
steps_agg <- with(activity, aggregate(steps, by=list(date=date), FUN=sum))
plot(steps_agg)
hist(steps_agg)
class(activity$steps)
class(steps_agg)
View(steps_agg)
hist(steps_agg$x)
g1 <- ggplot(steps_agg, aes(x=as.factor(date),y=steps))
g1 <- g1 + geom_bar(stat="identity", position="dodge")
g1 <- g1 + labs(title="Histogram of steps", x="Day", y="Number of steps")
print(g1)
```
g1 <- ggplot(steps_agg, aes(x=as.factor(date),y=steps))
library(ggplot2)
library("knitr", lib.loc="/home/leibrandt/R/x86_64-pc-linux-gnu-library/3.1")
library(knitr)
library(ggplot2)
g1 <- ggplot(steps_agg, aes(x=as.factor(date),y=steps))
g1 <- g1 + geom_bar(stat="identity", position="dodge")
g1 <- g1 + labs(title="Histogram of steps", x="Day", y="Number of steps")
print(g1)
names(steps_agg) <- revalue(names(steps_agg), c("x"="steps"))
View(steps_agg)
steps_agg <- with(activity, aggregate(steps, by=list(date=date), FUN=sum))
names(steps_agg) <- revalue(names(steps_agg), c("x"="steps"))
View(steps_agg)
View(steps_agg)
??revalue
library("plyr", lib.loc="/home/leibrandt/R/x86_64-pc-linux-gnu-library/3.1")
names(steps_agg) <- revalue(names(steps_agg), c("x"="steps"))
g1 <- ggplot(steps_agg, aes(x=as.factor(date),y=steps))
g1 <- g1 + geom_bar(stat="identity", position="dodge")
g1 <- g1 + labs(title="Histogram of steps", x="Day", y="Number of steps")
print(g1)
mean(steps_agg$steps)
?mean
mean(steps_agg$steps, na.rm = TRUE)
?media
?median
median(steps_agg$steps, na.rm = TRUE)
60*60
60*25/5
60*25
?plot
plot(x=activity$interval, y=activity$steps , type="l")
?aggregate
intervalSteps  <- with(activity, aggregate(steps, by=list(interval=interval), FUN=mean))
names(intervalSteps) <- revalue(names(intervalSteps), c("x"="steps"))
View(intervalSteps)
intervalSteps  <- with(activity, aggregate(steps, by=list(interval=interval), FUN=sum))
View(intervalSteps)
intervalSteps  <- with(activity, aggregate(steps, by=list(interval=date), FUN=sum))
View(intervalSteps)
intervalSteps  <- with(activity, aggregate(steps, by=list(interval=date), FUN=mean))
View(intervalSteps)
View(activity)
intervalSteps  <- with(activity, aggregate(steps, by=list(interval=interval), FUN=mean))
View(intervalSteps)
names(intervalSteps) <- revalue(names(intervalSteps), c("x"="steps"))
View(intervalSteps)
intervalSteps  <- with(activity, aggregate(steps, by=list(interval=as.factor(interval)), FUN=mean))
names(intervalSteps) <- revalue(names(intervalSteps), c("x"="steps"))
View(intervalSteps)
View(intervalSteps)
list(interval=activity$interval)
intervalSteps  <- with(activity, aggregate(steps, by=list(interval=date), FUN=mean))
View(intervalSteps)
table(is.na(activity$interval))
activity$steps*!is.na(activity$interval)
!is.na(activity$interval)
as.numeric(!is.na(activity$interval))
as.numeric(!is.na(activity$steps))
activity$steps * as.numeric(!is.na(activity$steps))
intervalSteps  <- with(activity, aggregate(steps, by=list(interval=date), FUN=mean(na.rm=TRUE)))
intervalSteps  <- with(activity, aggregate(steps, by=list(interval=date), FUN=mean(x=..., na.rm=TRUE)))
intervalSteps  <- with(activity, aggregate(steps, by=list(interval=date), FUN=mean(na.rm=TRUE)))
intervalSteps  <- with(activity, aggregate(steps, by=list(interval=date), FUN=mean))
intervalSteps  <- with(activity, aggregate(steps, by=list(interval=date), FUN=mean))
View(intervalSteps)
?completecase
?complete
??completecase
activity2 <- complete.cases(activity)
activity2 <- activity[,complete.cases(activity)]
activity2 <- activity[complete.cases(activity),]
View(activity2)
intervalSteps  <- with(activity2, aggregate(steps, by=list(interval=date), FUN=mean))
View(intervalSteps)
activity3 <- na.omit(activity)
View(activity3)
View(activity2)
View(activity3)
intervalSteps  <- with(activity, aggregate(steps, by=list(interval=date), FUN=mean, na.action=na.omit))
View(intervalSteps)
intervalSteps  <- with(activity, aggregate(steps, by=list(interval=interval), FUN=mean, na.action=na.omit))
View(intervalSteps)
intervalSteps  <- with(activity2, aggregate(steps, by=list(interval=interval), FUN=mean))
View(intervalSteps)
intervalSteps  <- with(activity, aggregate(steps, by=list(interval=interval), FUN=mean))
View(intervalSteps)
intervalSteps  <- with(activity2, aggregate(steps, by=list(interval=interval), FUN=mean))
View(intervalSteps)
intervalSteps  <- with(activity2, aggregate(steps, by=list(interval=interval), FUN=mean, na.action=na.omit))
View(intervalSteps)
intervalSteps  <- with(activity, aggregate(steps, by=list(interval=interval), FUN=mean, na.action=na.omit))
View(intervalSteps)
intervalSteps  <- with(na.omit(activity), aggregate(steps, by=list(interval=interval), FUN=mean, na.action=na.omit))
View(intervalSteps)
intervalSteps  <- with(na.omit(activity), aggregate(steps, by=list(interval=interval), FUN=mean))
View(intervalSteps)
plot(x=activity$interval, y=activity$steps , type="l")
plot(x=intervalSteps$interval, y=intervalSteps$steps , type="l")
View(intervalSteps)
names(intervalSteps) <- revalue(names(intervalSteps), c("x"="steps"))
intervalSteps  <- with(na.omit(activity), aggregate(steps, by=list(interval=interval), FUN=mean))
names(intervalSteps) <- revalue(names(intervalSteps), c("x"="steps"))
plot(x=intervalSteps$interval, y=intervalSteps$steps , type="l")
?plot
plot(x=intervalSteps$interval, y=intervalSteps$steps , type="l",main="Steps in interval" xlab="Interval", ylab="Average of number of steps")
plot(x=intervalSteps$interval, y=intervalSteps$steps , type="l",main="Steps in interval" xlab="Interval", ylab="Average of number of steps")
plot(x=intervalSteps$interval, y=intervalSteps$steps , type="l", main="Steps in interval", xlab="Interval", ylab="Average of number of steps")
intervalSteps  <- aggregate(activity$steps, by=list(interval=activity$interval), FUN=mean))
names(intervalSteps) <- revalue(names(intervalSteps), c("x"="steps"))
plot(x=intervalSteps$interval, y=intervalSteps$steps , type="l", main="Steps in interval", xlab="Interval", ylab="Average of number of steps")
View(intervalSteps)
max(intervalSteps$steps)
?max
pmax(intervalSteps$steps)
which.max(intervalSteps$steps)
intervalSteps$steps[which.max(intervalSteps$steps)]
intervalSteps$interval[which.max(intervalSteps$steps)]
?na.omit
?complete.cases
sum(complete.cases(activity))
?anyNA
is.na(activity)
sum(!complete.cases(activity))
sum(complete.cases(activity))
sum(!complete.cases(activity))
table(is.na(activity$date))
table(is.na(activity$interval))
table(is.na(activity$steps))
?is.na(acitivity$steps)
is.na(acitivity$steps)
activity$steps[is.na(activity$steps)]
View(intervalSteps)
head(activity$interval[is.na(activity$steps)])
intervalSteps$interval == activity$interval[is.na(activity$steps)]
activity$interval[is.na(activity$steps)]
?match
match(activity$interval[is.na(activity$steps)], intervalSteps$interval)
intervalSteps$steps(match(activity$interval[is.na(activity$steps)], intervalSteps$interval))
intervalSteps$steps[match(activity$interval[is.na(activity$steps)], intervalSteps$interval)]
activity$steps[is.na(activity$steps)] <- intervalSteps$steps[match(activity$interval[is.na(activity$steps)], intervalSteps$interval)]
View(acitivity)
View(activity)
library(knitr)
library(ggplot2)
library(plyr)
```
Load the data
library(knitr)
library(ggplot2)
library(plyr)
library(knitr)
library(ggplot2)
library(plyr)
unzip("activity.zip")
activity <- read.csv(unzip("activity.zip", list = TRUE)$Name)
activity$steps <- as.numeric(activity$steps)
# activity$date <- as.POSIXlt(activity$date)
activity$interval <- as.numeric(activity$interval)
dailySteps <- with(na.omit(activity), aggregate(steps, by=list(date=date), FUN=sum))
names(dailySteps) <- revalue(names(dailySteps), c("x"="steps"))
g1 <- ggplot(dailySteps, aes(x=as.factor(date),y=steps))
g1 <- g1 + geom_bar(stat="identity", position="dodge")
g1 <- g1 + labs(title="Histogram of steps", x="Day", y="Number of steps")
print(g1)
mean(dailySteps$steps, na.rm = TRUE)
median(dailySteps$steps, na.rm = TRUE)
intervalSteps  <- with(na.omit(activity), aggregate(steps, by=list(interval=interval), FUN=mean))
names(intervalSteps) <- revalue(names(intervalSteps), c("x"="steps"))
plot(x=intervalSteps$interval, y=intervalSteps$steps , type="l", main="Steps in interval", xlab="Interval", ylab="Average of number of steps")
intervalSteps$interval[which.max(intervalSteps$steps)]
sum(!complete.cases(activity))
activityNoNa <- activity
activityNoNa$steps[is.na(activity$steps)] <- intervalSteps$steps[match(activity$interval[is.na(activity$steps)], intervalSteps$interval)]
activityNoNA <- activity
activityNoNA$steps[is.na(activity$steps)] <- intervalSteps$steps[match(activity$interval[is.na(activity$steps)], intervalSteps$interval)]
dailyStepsNoNA <- with(activityNoNA, aggregate(steps, by=list(date=date), FUN=sum))
names(dailyStepsNoNA) <- revalue(names(dailyStepsNoNA), c("x"="steps"))
g2 <- ggplot(dailyStepsNoNA, aes(x=as.factor(date),y=steps))
g2 <- g2 + geom_bar(stat="identity", position="dodge")
g2 <- g2 + labs(title="Histogram of steps (with Imputation)", x="Day", y="Number of steps")
print(g2)
mean(dailyStepsNoNA$steps)
median(dailyStepsNoNA$steps)
mean(dailySteps$steps, na.rm = TRUE)
median(dailySteps$steps, na.rm = TRUE)
clear(activityNoNa)
activity2 <- activity
activity2 <- activityNoNA
?weekdays
weeksdays(activity2$date)
weekdays(activity2$date)
weekdays.POSIXt(as.POSIXlt(activity2$date))
as.numeric(weekdays(activity2$date))
weekdays.POSIXt(as.POSIXlt(activityNoNA$date))
weekdays.POSIXt(as.POSIXlt(activityNoNA$date))=="Sonntag"
weekdays.POSIXt(as.POSIXlt(activityNoNA$date))==c("Sonntag","Samstag")
weekdays.POSIXt(as.POSIXlt(activityNoNA$date)) %in% c("Sonntag","Samstag")
?Sys.setlocale
Sys.getlocale(category = "en_US.UTF-8")
Sys.getlocale(category = en_US.UTF-8)
Sys.getlocale(category = "en_US.UTF-8")
Sys.getlocale(locale = "en_US.UTF-8")
Sys.setlocale("LC_TIME", "en_US.UTF-8")
weekdays.POSIXt(as.POSIXlt(activityNoNA$date))
weekdays.POSIXt(as.POSIXlt(activityNoNA$date)) %in% c("Saturday","Sunday")
activityNoNA$day <- as.numeric(weekdays.POSIXt(as.POSIXlt(activityNoNA$date)) %in% c("Saturday","Sunday"))
View(dailyStepsNoNA)
View(activityNoNA)
as.numeric(FALSE)
as.numeric(TRUE)
activityNoNA$day <- ifelse(  weekdays.POSIXt(as.POSIXlt(activityNoNA$date)) %in% c("Saturday","Sunday")  ,  "weekend"  ,  "weekday"  )
View(activityNoNA)
tail(activityNoNA)
table(activityNoNA$day)
4608/12960*2/5
4608/12960
2/5
activityNoNA$day <- as.factor(ifelse(  weekdays.POSIXt(as.POSIXlt(activityNoNA$date)) %in% c("Saturday","Sunday")  ,  "weekend"  ,  "weekday"  ))
View(dailyStepsNoNA)
View(activityNoNa)
View(activityNoNA)
class(activityNoNA$day)
levels(activityNoNA$day)
class(activityNoNA$interval)
?geom_plot
activityNoNA$day <- as.factor(ifelse(  weekdays.POSIXt(as.POSIXlt(activityNoNA$date)) %in% c("Saturday","Sunday")  ,  "weekend"  ,  "weekday"  ))
g3 <- ggplot(activityNoNA, aes(x=as.factor(interval),y=steps))
g3 <- g3 + facet_grid(.~day)
g3 <- g3 + geom_line
g3 <- g3 + labs(title="Steps in interval", x="Interval", y="Number of steps")
print(g3)
g3 <- ggplot(activityNoNA, aes(x=as.factor(interval),y=steps))
g3 <- g3 + facet_grid(.~day)
g3 <- g3 + geom_line()
g3 <- g3 + labs(title="Steps in interval", x="Interval", y="Number of steps")
print(g3)
g3 <- g3 + facet_grid(day~.)
print(g3)
activityNoNA$day <- as.factor(ifelse(  weekdays.POSIXt(as.POSIXlt(activityNoNA$date)) %in% c("Saturday","Sunday")  ,  "weekend"  ,  "weekday"  ))
intervalStepsNoNA <- with(activityNoNA, aggregate(steps, by=list(interval=interval,day=day), FUN=mean))
names(intervalStepsNoNA) <- revalue(names(intervalStepsNoNA), c("x"="steps"))
View(intervalStepsNoNA)
g3 <- ggplot(intervalStepsNoNA, aes(x=as.factor(interval),y=steps))
g3 <- g3 + facet_grid(day~.)
g3 <- g3 + geom_line()
g3 <- g3 + labs(title="Steps in interval", x="Interval", y="Number of steps")
print(g3)
head(intervalStepsNoNA)
g3 <- ggplot(intervalStepsNoNA, aes(x=as.factor(interval),y=steps))
g3 <- g3 + facet_grid(as.factor(day)~.)
g3 <- g3 + geom_line()
g3 <- g3 + labs(title="Steps in interval", x="Interval", y="Number of steps")
print(g3)
g3 <- ggplot(intervalStepsNoNA, aes(x=as.factor(interval),y=steps))
g3 <- g3 + geom_line()
g3 <- g3 + labs(title="Steps in interval", x="Interval", y="Number of steps")
print(g3)
g3 <- ggplot(intervalStepsNoNA, aes(x=as.factor(interval),y=steps))
g3 <- g3 + facet_grid(as.factor(day)~.)
g3 <- g3 + geom_line()
g3 <- g3 + labs(title="Steps in interval", x="Interval", y="Number of steps")
print(g3)
g3 <- ggplot(intervalStepsNoNA, aes(x=as.factor(interval),y=steps))
g3 <- g3 + facet_grid(as.factor(day)~.)
g3 <- g3 + geom_line()
g3 <- g3 + labs(title="Steps in interval", x="Interval", y="Number of steps")
head(intervalStepsNoNA)
g3 <- ggplot(intervalStepsNoNA, aes(x=as.factor(interval),y=steps))
g3 <- g3 + geom_line()
g3 <- g3 + labs(title="Steps in interval", x="Interval", y="Number of steps")
print(g3)
xyplot(steps ~ interval | day, intervalStepsNoNA, type="l", layout=c(1,2))
library(lattice)
xyplot(steps ~ interval | day, intervalStepsNoNA, type="l", layout=c(1,2))
g3 <- g3 + facet_grid(day~.)
print(g3)
g3 <- ggplot(intervalStepsNoNA, aes(x=as.factor(interval),y=steps))
g3 <- g3 + facet_grid(day~.)
g3 <- g3 + geom_line()
g3 <- g3 + labs(title="Steps in interval", x="Interval", y="Number of steps")
print(g3)
g3 <- g3 + facet_grid(as.integer(day)~.)
print(g3)
g3 <- g3 + facet_grid(day~.)
print(g3)
g3 <- ggplot(intervalStepsNoNA )
g3 <- g3 + facet_grid(day~.)
g3 <- g3 + geom_line(aes(x=as.factor(interval),y=steps))
g3 <- g3 + labs(title="Steps in interval", x="Interval", y="Number of steps")
print(g3)
